package foo.bar

primitive x == y: Integer -> Integer -> Boolean

isZero x : Integer -> !Boolean =
  case x of
    0      => !True
    a @ b  => !False
    any    => !False

otherwise : !Boolean =
  (\a: Boolean, b: Boolean => !a) True False

ok: !Integer = let !x = !1 in
               let !y = !x in !y

id x : a -> !a = !x -- if not a built in type name then dont care yet about indexing

branch: !Integer = if True then let !x = !3 in !x else let !y = !4 in !y